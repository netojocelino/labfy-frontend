{"version":3,"sources":["components/styles/global.js","components/Header/styles.js","components/Header/index.js","components/Board/context.js","components/List/styles.js","components/Card/styles.js","components/Card/index.js","components/List/index.js","components/Board/styles.js","components/Board/index.js","services/api.js","App.js","index.js"],"names":["createGlobalStyle","Container","styled","div","Header","name","createContext","done","props","isDragging","css","Label","span","color","Card","data","index","listIndex","ref","useRef","move","useContext","BoardContext","useDrag","item","type","collect","monitor","dragRef","useDrop","accept","hover","draggedListIndex","targetListIndex","draggedIndex","targetIndex","targetSize","current","getBoundingClientRect","targetCenter","bottom","top","draggedTop","getClientOffset","y","dropRef","labels","map","label","key","content","user","src","alt","List","title","creatable","size","cards","card","id","Board","useState","lists","setLists","Provider","value","fromList","toList","from","to","produce","draft","dragged","splice","list","App","DndProvider","backend","HTML5Backend","ReactDOM","render","document","getElementById"],"mappings":"+qBAEeA,kBAAf,K,8LCAO,IAAMC,EAAYC,IAAOC,IAAV,KCEP,SAASC,IACpB,OACI,kBAACH,EAAD,CAAWI,KAAK,UACZ,4C,mBCLGC,8BAAc,I,+vBCAtB,IAAML,EAAYC,IAAOC,IAAV,KAIP,qBAAEI,KAAiB,GAAM,K,0gCCJjC,IAAMN,EAAYC,IAAOC,IAAV,KA4BjB,SAAAK,GAAK,OAAIA,EAAMC,YAAcC,YAApB,QAcDC,EAAQT,IAAOU,KAAV,KAKK,qBAAGC,SC1CX,SAASC,EAAT,GAA2C,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UACpCC,EAAMC,mBACJC,EAASC,qBAAWC,GAApBF,KAF+C,EAIpBG,YAAQ,CACzCC,KAAM,CAAEC,KAAM,OAAQT,QAAOC,aAC7BS,QAAS,SAAAC,GAAO,MAAK,CACnBlB,WAAYkB,EAAQlB,iBAP+B,mBAI9CA,EAJ8C,KAI9CA,WAAcmB,EAJgC,OAWnCC,YAAQ,CAC3BC,OAAQ,OACRC,MAF2B,SAErBP,EAAMG,GACT,IAAMK,EAAmBR,EAAKP,UACxBgB,EAAkBhB,EAElBiB,EAAeV,EAAKR,MACpBmB,EAAenB,EAErB,GAAIkB,IAAiBC,GAAeH,IAAqBC,EAAzD,CAIA,IAAMG,EAAalB,EAAImB,QAAQC,wBACzBC,GAAgBH,EAAWI,OAASJ,EAAWK,KAAO,EAItDC,EAFgBf,EAAQgB,kBAEGC,EAAIR,EAAWK,IAG5CP,EAAeC,GAAeO,EAAaH,GAI3CL,EAAeC,GAAeO,EAAaH,IAI/CnB,EAAMY,EAAkBC,EAAiBC,EAAcC,GAEvDX,EAAKR,MAAQmB,EACbX,EAAKP,UAAYgB,OAOrB,OAFAL,GAAQiB,EAhD+C,qBAgDvC3B,IAGd,kBAAC,EAAD,CAAWb,KAAK,OAAOa,IAAKA,EAAKT,WAAYA,GAC3C,gCACGM,EAAK+B,OAAOC,KAAK,SAAAC,GAAK,OAAI,kBAACrC,EAAD,CAAOsC,IAAKD,EAAOnC,MAAOmC,QAEvD,2BAAKjC,EAAKmC,SACTnC,EAAKoC,MAAQ,yBAAKC,IAAMrC,EAAKoC,KAAOE,IAAI,MCzDhC,SAASC,EAAT,GAA2C,IAA3BvC,EAA0B,EAA1BA,KAAaE,EAAa,EAApBD,MACnC,OACE,kBAAC,EAAD,CAAWT,KAAMQ,EAAKR,MAClB,gCACI,4BAAMQ,EAAKwC,OAETxC,EAAKyC,WACH,4BAAQ/B,KAAK,UACT,kBAAC,IAAD,CAAOgC,KAAM,GAAI5C,MAAM,WAKnC,4BACIE,EAAK2C,MAAMX,KACT,SAACY,EAAM3C,GAAP,OACE,kBAACF,EAAD,CACEmC,IAAKU,EAAKC,GACV3C,UAAWA,EACXD,MAAOA,EACPD,KAAM4C,S,iJCxBjB,IAAM1D,EAAYC,IAAOC,IAAV,KCShBY,ECVK,CACL,CACEwC,MAAO,UACPC,WAAW,EACXE,MAAO,CACL,CACEE,GAAI,EACJV,QAAS,iCACTJ,OAAQ,CAAC,WACTK,KAAM,iEAER,CACES,GAAI,EACJV,QAAS,0EACTJ,OAAQ,CAAC,WACTK,KAAM,iEAER,CACES,GAAI,EACJV,QAAS,uCACTJ,OAAQ,CAAC,WACTK,KAAM,iEAER,CACES,GAAI,EACJV,QAAS,qEACTJ,OAAQ,CAAC,WACTK,KAAM,iEAER,CACES,GAAI,EACJV,QAAS,iCACTJ,OAAQ,CAAC,WACTK,KAAM,mEAIZ,CACEI,MAAO,UACPC,WAAW,EACXE,MAAO,CACL,CACEE,GAAI,EACJV,QAAS,4BACTJ,OAAQ,GACRK,KAAM,mEAIZ,CACEI,MAAO,UACPC,WAAW,EACXE,MAAO,CACL,CACEE,GAAI,EACJV,QAAS,6DACTJ,OAAQ,CAAC,WACTK,KAAM,iEAER,CACES,GAAI,EACJV,QAAS,iCACTJ,OAAQ,CAAC,WACTK,KAAM,iEAER,CACES,GAAI,EACJV,QAAS,+BACTJ,OAAQ,MAId,CACES,MAAO,eACPC,WAAW,EACXjD,MAAM,EACNmD,MAAO,CACL,CACEE,GAAI,GACJV,QAAS,iDACTJ,OAAQ,IAEV,CACEc,GAAI,GACJV,QAAS,iCACTJ,OAAQ,CAAC,YAEX,CACEc,GAAI,GACJV,QAAS,8FACTJ,OAAQ,CAAC,eD9EN,SAASe,IAAS,IAAD,EAEJC,mBAAS/C,GAFL,mBAEvBgD,EAFuB,KAEhBC,EAFgB,KAY9B,OACE,kBAAC,EAAaC,SAAd,CAAuBC,MAAO,CAAEH,QAAO3C,KATzC,SAAe+C,EAAUC,EAAQC,EAAMC,GACrCN,EAASO,YAAQR,GAAO,SAAAS,GACtB,IAAMC,EAAUD,EAAML,GAAUT,MAAMW,GACtCG,EAAML,GAAUT,MAAMgB,OAAOL,EAAM,GACnCG,EAAMJ,GAAQV,MAAMgB,OAAOJ,EAAI,EAAGG,UAMlC,kBAAC,EAAD,KACIV,EAAMhB,KACN,SAAC4B,EAAM3D,GAAP,OACE,kBAACsC,EAAD,CACEL,IAAK0B,EAAKpB,MACVvC,MAAOA,EACPD,KAAM4D,SEZLC,MAZf,WACE,OACE,kBAACC,EAAA,EAAD,CAAaC,QAASC,KACpB,kBAAC3E,EAAD,MAEA,kBAACyD,EAAD,MAEA,kBAAC,EAAD,QCXNmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2b4c32c8.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500&display=swap');\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n  body {\r\n    font: 14px 'Roboto', sans-serif;\r\n    background: #ecf1f8;\r\n    color: #333;\r\n    -webkit-font-smoothing: antialiased !important;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  height: 80px;\r\n  padding: 0 30px;\r\n  background: #7159c1;\r\n  color: #FFF;\r\n  display: flex;\r\n  align-items: center;\r\n`;","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nexport default function Header( ) {\r\n    return (\r\n        <Container name=\"Header\">\r\n            <h1>Labfy - Ana</h1>\r\n        </Container>\r\n    );\r\n}","import { createContext } from 'react';\n\nexport default createContext({  });","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    padding: 0 15px;\r\n    height: 100%;\r\n    flex: 0 0 320px;\r\n    opacity: ${({done}) => done ? 0.6 : 1};\r\n\r\n    & + div {\r\n        border-left: 1px solid rgba(0, 0, 0, 0.05);\r\n    }\r\n\r\n    header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        height: 42px;\r\n\r\n        h2 {\r\n            font-weight: 500;\r\n            font-size: 16px;\r\n            padding: 0 10px;\r\n        }\r\n\r\n        button {\r\n            height: 42px;\r\n            width: 42px;\r\n            border-radius: 18px;\r\n            background-color: #5b3bfd;\r\n            border: 0;\r\n            cursor: pointer;\r\n        }\r\n\r\n        ul {\r\n            margin-top: 30px;\r\n        }\r\n    }\r\n`;","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  background-color: #FFF;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  padding: 15px;\r\n  box-shadow: 0 1px 4px 0 rgba(192, 208, 230, 0.8);\r\n  border-top: 20px solid rgba(230, 236, 245, 0.5);\r\n  cursor: grab;\r\n\r\n  header {\r\n    position: absolute;\r\n    top: -22px;\r\n    left: 15px;\r\n  }\r\n\r\n  p {\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n  }\r\n\r\n  img {\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 2px;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  ${ props => props.isDragging && css`\r\n    border: 2px dashed rgba(0, 0, 0, 0.2);\r\n    padding-top: 31px;\r\n\tborder-radius: 0;\r\n\tbackground-color: transparent;\r\n\tbox-shadow: none;\r\n\tcursor: grabbing;\r\n\t\r\n\tp, img, header {\r\n\t\topacity: 0;\r\n\t}\r\n  `}\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 2px;\r\n  display: inline-block;\r\n  background-color: ${ ({ color }) => color}\r\n`;\r\n\r\n/*\r\n\r\n&:after {\r\n  position: absolute;\r\n  content: \"${({ tooltip }) => tooltip}\";\r\n  width: 200px;\r\n  margin-left: 15px;\r\n  margin-top: -4px;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 4px 5px;\r\n}\r\n\r\n*/","import React, { useRef, useContext } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport BoardContext from '../Board/context';\r\n\r\nimport { Container, Label } from './styles';\r\n\r\nexport default function Card({ data, index, listIndex }) {\r\n  const ref = useRef();\r\n  const { move } = useContext(BoardContext);\r\n  \r\n  const [{ isDragging }, dragRef ] = useDrag({\r\n    item: { type: 'CARD', index, listIndex },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  \r\n  const [, dropRef] = useDrop({\r\n\t  accept: 'CARD',\r\n\t  hover(item, monitor) {\r\n      const draggedListIndex = item.listIndex;\r\n      const targetListIndex = listIndex;\r\n\t\t  \r\n      const draggedIndex = item.index;\r\n      const targetIndex  = index;\r\n      \r\n      if( draggedIndex === targetIndex && draggedListIndex === targetListIndex ) {\r\n        return;\r\n      }\r\n      \r\n      const targetSize = ref.current.getBoundingClientRect(); // pega o tamanho do card \r\n      const targetCenter = (targetSize.bottom - targetSize.top) / 2; // pega a metade da altura do card\r\n      \r\n      const draggedOffset = monitor.getClientOffset(); // pega o quanto o item foi arrastado\r\n      \r\n      const draggedTop = draggedOffset.y - targetSize.top; // retorna a dist√¢ncia do top da tela - item do topo da tela\r\n      \r\n      // console.log(item.index, index, targetCenter, draggedOffset);\r\n      if( draggedIndex < targetIndex && draggedTop < targetCenter ) {\r\n        return;\r\n      }\r\n      \r\n      if( draggedIndex > targetIndex && draggedTop > targetCenter ) {\r\n        return;\r\n      }\r\n      \r\n      move( draggedListIndex, targetListIndex, draggedIndex, targetIndex );\r\n      \r\n      item.index = targetIndex;\r\n      item.listIndex = targetListIndex;\r\n      \r\n\t  }\r\n  });\r\n\r\n  dragRef(dropRef(ref));\r\n  \r\n  return (\r\n    <Container name=\"Card\" ref={ref} isDragging={isDragging}>\r\n      <header>\r\n        {data.labels.map( label => <Label key={label} color={label} />)}\r\n      </header>\r\n      <p>{ data.content }</p>\r\n      {data.user && <img src={ data.user } alt=\"\" />}\r\n    </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport { MdAdd } from 'react-icons/md'\r\nimport { Container } from './styles';\r\nimport Card from '../Card';\r\n\r\nexport default function List({ data, index: listIndex }) {\r\n  return (\r\n    <Container done={data.done}>\r\n        <header>\r\n            <h2>{ data.title }</h2>\r\n\r\n            { data.creatable && (\r\n                <button type=\"button\">\r\n                    <MdAdd size={24} color=\"#FFF\" />\r\n                </button>\r\n            )}\r\n        </header>\r\n\r\n        <ul>\r\n          { data.cards.map(\r\n              (card, index) => (\r\n                <Card\r\n                  key={card.id}\r\n                  listIndex={listIndex}\r\n                  index={index}\r\n                  data={card}\r\n                />\r\n                )\r\n            )\r\n          }\r\n        </ul>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    padding: 30px 0;\r\n    height: calc(100% - 80px);\r\n`;","import React, { useState } from 'react';\r\nimport produce from 'immer';\r\n\r\nimport { loadLists } from '../../services/api';\r\n\r\nimport BoardContext from './context';\r\n\r\nimport List from '../List';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst data = loadLists();\r\n\r\nexport default function Board() {\r\n  \r\n  const [lists, setLists] = useState(data);\r\n  \r\n  function move (fromList, toList, from, to) {\r\n    setLists(produce(lists, draft => {\r\n      const dragged = draft[fromList].cards[from];\r\n      draft[fromList].cards.splice(from, 1);\r\n      draft[toList].cards.splice(to, 0, dragged)\r\n    }))\r\n  }\r\n  \r\n  return (\r\n    <BoardContext.Provider value={{ lists, move }}>\r\n      <Container>\r\n        { lists.map(\r\n          (list, index) => (\r\n            <List\r\n              key={list.title}\r\n              index={index}\r\n              data={list}\r\n            />\r\n          )\r\n        )}\r\n      </Container>\r\n    </BoardContext.Provider>\r\n  );\r\n}\r\n","export function loadLists() {\r\n    return [\r\n      { \r\n        title: 'Tarefas', \r\n        creatable: true,\r\n        cards: [\r\n          {\r\n            id: 1,\r\n            content: 'Estudar m√≥dulo 01 de NodeJS',\r\n            labels: ['#7159c1'],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          },\r\n          {\r\n            id: 2,\r\n            content: 'Criar v√≠deo para o Youtube ensinando a recriar a interface do Pipefy',\r\n            labels: ['#7159c1'],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          },\r\n          {\r\n            id: 3,\r\n            content: 'Estudar m√≥dulo 03 de React Native',\r\n            labels: ['#7159c1'],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          },\r\n          {\r\n            id: 4,\r\n            content: 'Gravar Aula \"NextJS: Utilizando server-side rendering com ReactJS\"',\r\n            labels: ['#54e1f7'],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          },\r\n          {\r\n            id: 5,\r\n            content: 'Gravar testes e deploy ReactJS',\r\n            labels: ['#54e1f7'],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          },\r\n        ]\r\n      },\r\n      { \r\n        title: 'Fazendo', \r\n        creatable: false,\r\n        cards: [\r\n          {\r\n            id: 6,\r\n            content: 'Recriando clone do Pipefy',\r\n            labels: [],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          }\r\n        ]\r\n      },\r\n      { \r\n        title: 'Pausado', \r\n        creatable: false,\r\n        cards: [\r\n          {\r\n            id: 7,\r\n            content: 'Gravar sobre Geolocaliza√ß√£o e mapas com React Native',\r\n            labels: ['#7159c1'],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          },\r\n          {\r\n            id: 8,\r\n            content: 'Gravar testes e deploy ReactJS',\r\n            labels: ['#54e1f7'],\r\n            user: 'https://rocketseat-cdn.s3-sa-east-1.amazonaws.com/profile.png'\r\n          },\r\n          {\r\n            id: 9,\r\n            content: 'Ajustes na biblioteca unform',\r\n            labels: [],\r\n          }\r\n        ]\r\n      },\r\n      { \r\n        title: 'Conclu√≠do', \r\n        creatable: false,\r\n        done: true,\r\n        cards: [\r\n          {\r\n            id: 10,\r\n            content: 'Gravar aula sobre deploy e CI com React Native',\r\n            labels: [],\r\n          },\r\n          {\r\n            id: 12,\r\n            content: 'Gravar testes e deploy ReactJS',\r\n            labels: ['#54e1f7'],\r\n          },\r\n          {\r\n            id: 13,\r\n            content: 'Gravar Aula \"Internacionaliza√ß√£o de aplica√ß√µes Node.js, ReactJS e React Native\"',\r\n            labels: ['#7159c1'],\r\n          }\r\n        ]\r\n      },\r\n    ];\r\n  }","import React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nimport GlobalStyle from './components/styles/global';\r\nimport Header from './components/Header';\r\nimport Board from './components/Board';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <Header />\r\n\r\n      <Board />\r\n      \r\n      <GlobalStyle />\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}