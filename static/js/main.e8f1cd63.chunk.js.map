{"version":3,"sources":["page/styles/global.js","page/Header/styles.js","page/Header/index.js","services/api.js","page/Board/styles.js","page/Card/styles.js","context.js","page/Card/index.js","page/List/styles.js","page/List/index.js","page/Board/index.js","page/Register/style.js","page/Register/index.js","Application.js","index.js"],"names":["createGlobalStyle","Container","styled","div","Toggle","button","Header","toggle","name","onClick","changeScreen","screen","api","axios","create","baseURL","timeout","BoardStyle","FormButton","children","toLowerCase","css","Color","color","CardStyle","props","isDragging","Label","span","Icon","right","title","Tooltip","Owner","small","createContext","Card","data","move","React","useContext","BoardContext","fridge_state","list_state","key","label","card_id","action","size","content","created_by","user","src","alt","ListStyle","done","List","handlerModal","type","cards","map","card","index","callback","console","log","Board","tsuser","useState","lists","setLists","loading","a","get","response","newCards","filter","cardId","newState","newData","toString","post","put","useEffect","Provider","value","list","RegisterStyle","Form","form","SelectColor","select","Message","legend","Register","info","setInformation","setProccess","setInfo","event","target","newInfo","Fragment","onChange","maxLength","rows","ev","preventDefault","request","setTimeout","window","location","Application","setScreen","Date","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8f1cd63.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500&display=swap');\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n  body {\r\n    font: 14px 'Roboto', sans-serif;\r\n    background: #ecf1f8;\r\n    color: #333;\r\n    -webkit-font-smoothing: antialiased !important;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  height: 80px;\r\n  padding: 0 30px;\r\n  background: #7159c1;\r\n  color: #FFF;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Toggle = styled.button`\r\n  position: absolute;\r\n  right: 20px;\r\n  border: 1px solid white;\r\n  background-color: transparent;\r\n  color: white;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n`;","import React from 'react';\r\n\r\nimport { Container, Toggle } from './styles';\r\n\r\nexport default function Header({ toggle }) {\r\n    return (\r\n        <Container name=\"Header\">\r\n            <h1>Labfy - Ana</h1>\r\n            <Toggle onClick={toggle.changeScreen}>Mudar de tela { toggle.screen ? 'Formul√°rio' : 'Quadro' }</Toggle>\r\n        </Container>\r\n    );\r\n}","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: \"/api/?key=index\",\r\n    timeout: 5 * 1000\r\n});\r\n\r\nexport default api;","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    padding: 30px 0;\r\n    height: calc(100% - 80px);\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    min-width: 125px;\r\n    height: 28px;\r\n    border-color: rgba(113,89,193,1);\r\n    outline-color: white;\r\n    background-color: rgba(81, 46, 197, 1);\r\n    color: white;\r\n    cursor: pointer;\r\n\r\n    ${ ({ children }) => children.toLowerCase() === \"cancelar\" && css`\r\n        margin-left: 33px;\r\n        font-weight: bold;\r\n        color: rgba(81, 46, 197, 1);\r\n        border-color: rgba(81, 46, 197, 1);\r\n        background-color: rgba(199, 151, 239, 0.8);\r\n    ` }\r\n`;\r\n\r\nexport const Color = styled.div`\r\n    float: right;\r\n    margin-right: 4px;\r\n    height: 22px;\r\n    width: 23px;\r\n    background-color: ${ ({ color }) => color };\r\n    border: 1px solid rgba(255, 255, 255, 0.6);\r\n    box-shadow: 1px 0px 2px #ccc;\r\n    display: inline-block;\r\n`;\r\n\r\nconst BoardStyle = {\r\n    Container,\r\n    FormButton,\r\n    Color\r\n};\r\n\r\nexport default BoardStyle;","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  background-color: #FFF;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  padding: 15px;\r\n  box-shadow: 0 1px 4px 0 rgba(192, 208, 230, 0.8);\r\n  border-top: 20px solid rgba(230, 236, 245, 0.5);\r\n  // cursor: grab;\r\n\r\n  header {\r\n    position: absolute;\r\n    top: -22px;\r\n    left: 15px;\r\n    width: 260px;\r\n  }\r\n\r\n  p {\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n  }\r\n\r\n  img {\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 2px;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  ${ props => props.isDragging && css`\r\n    border: 2px dashed rgba(0, 0, 0, 0.2);\r\n    padding-top: 31px;\r\n\tborder-radius: 0;\r\n\tbackground-color: transparent;\r\n\tbox-shadow: none;\r\n\tcursor: grabbing;\r\n\t\r\n\tp, img, header {\r\n\t\topacity: 0;\r\n\t}\r\n  `}\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 2px;\r\n  display: inline-block;\r\n  background-color: ${ ({ color }) => color}\r\n`;\r\n\r\n/*\r\n\r\n&:after {\r\n  position: absolute;\r\n  content: \"${({ tooltip }) => tooltip}\";\r\n  width: 200px;\r\n  margin-left: 15px;\r\n  margin-top: -4px;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 4px 5px;\r\n}\r\n\r\n*/\r\n\r\n\r\nconst Icon = styled.button`\r\n  height: 20px !important;\r\n  width: 20px !important;\r\n  padding-top: 2px;\r\n  position: absolute;\r\n  right: ${ ({ right = 0 }) => right}px;\r\n  animation: 1s linear all;\r\n\r\n  ${ props => props.title && css`\r\n  &:hover{\r\n    border-top-left-radius: 0px;\r\n    border-bottom-left-radius: 0px;\r\n    z-index: 150;\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  &:hover:before{\r\n    opacity: 1;\r\n    width: max-content;\r\n    right: 12px;\r\n    padding: 2px 17px 2px 4px;\r\n    border-radius: 5px 0 0 5px;\r\n    margin: -2px 2px 0 0;\r\n    height: 16px;\r\n  }\r\n  &:before{\r\n    position: absolute;\r\n    width: 0;\r\n    background-color: #5b3bfd;\r\n    content: \"${ ({ title }) => title }\";\r\n    color: white;\r\n    opacity: 0;\r\n  }\r\n  `}\r\n\r\n`;\r\n\r\n\r\nconst Tooltip = styled.button`\r\n  width: 150px;\r\n  background-color: black;\r\n  content: \"${props => props.title }\";\r\n  left: 0;\r\n  color: white;\r\n  padding: 2px 4px;\r\n  border-radius: 5px 0 0 5px;\r\n`;\r\n\r\nconst Owner = styled.small`\r\n  color: #ccc;\r\n  font-weight: bold;\r\n`\r\n\r\nconst CardStyle = {\r\n Container,\r\n Label,\r\n Icon,\r\n Tooltip,\r\n Owner\r\n};\r\n\r\nexport default CardStyle;","import { createContext } from 'react';\r\n\r\nexport default createContext({  });","import React, { useContext } from 'react';\r\n\r\nimport { MdArchive, MdKeyboardArrowRight } from 'react-icons/md';\r\n\r\nimport CardStyle from './styles'\r\n\r\nimport BoardContext from '../../context';\r\n\r\nexport default function Card ({ data }) {\r\n\r\n    const { move } = React.useContext(BoardContext);\r\n\r\n    const state = {\r\n        todo: '',\r\n        doing: '',\r\n        done: ''\r\n    };\r\n    \r\n    const fridge_state = data.list_state.toLowerCase() === 'fridge';\r\n    return (\r\n    <CardStyle.Container name=\"Card\">\r\n        <header>\r\n            <CardStyle.Label key={data.label} color={data.label} />\r\n            { data.list_state.toLowerCase() !== 'done' && data.list_state.toLowerCase() !== 'fridge' && \r\n                <CardStyle.Icon onClick={ () => move(data.card_id, 'next') } title={data.action.title}>\r\n                <MdKeyboardArrowRight size={17} color=\"#ccc\" />\r\n            </CardStyle.Icon>}\r\n            { !fridge_state &&\r\n                <CardStyle.Icon onClick={ () => move(data.card_id, fridge_state ? \"back\" : \"delete\") }\r\n                    title='Arquivar' right={26}>\r\n                    <MdArchive size={17} color=\"#ccc\" />\r\n                </CardStyle.Icon>\r\n            }\r\n        </header>\r\n        <h4>{data.title}</h4>\r\n        <p>{ data.content }</p>\r\n        <CardStyle.Owner>Solicitado por { data.created_by}</CardStyle.Owner>\r\n        {data.user && <img src={ data.user } alt=\"\" />}\r\n    </CardStyle.Container>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    padding: 0 15px;\r\n    height: 100%;\r\n    flex: 0 0 320px;\r\n    opacity: ${({done}) => done ? 0.6 : 1};\r\n\r\n    & + div {\r\n        border-left: 1px solid rgba(0, 0, 0, 0.05);\r\n    }\r\n\r\n    header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        height: 42px;\r\n\r\n        h2 {\r\n            font-weight: 500;\r\n            font-size: 16px;\r\n            padding: 0 10px;\r\n        }\r\n\r\n        button {\r\n            height: 42px;\r\n            width: 42px;\r\n            border-radius: 18px;\r\n            background-color: #5b3bfd;\r\n            border: 0;\r\n            cursor: pointer;\r\n        }\r\n\r\n        ul {\r\n            margin-top: 30px;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst ListStyle = {\r\n   Container\r\n};\r\n\r\nexport default ListStyle;","import React from 'react';\r\n\r\nimport { MdAdd } from 'react-icons/md'\r\n\r\nimport Card from '../Card';\r\n\r\nimport ListStyle from './styles';\r\n\r\n\r\nexport default function List({ data, handlerModal }) {\r\n  return (\r\n    <ListStyle.Container done={data.title === \"DONE\" || data.title === \"FRIDGE\"}>\r\n      <header>\r\n        <h2>{ data.title }</h2>\r\n\r\n        { data.title===\"TODO\" && (\r\n          <button type=\"button\" onClick={handlerModal}>\r\n            <MdAdd size={24} color=\"#FFF\" />\r\n          </button>\r\n        )}\r\n      </header>\r\n\r\n      <ul>\r\n        {data.cards.map(function (card, index) {\r\n          \r\n              const action = { title: \"Mover para a direita\", callback: () => console.log('movendo...') };\r\n              action.title = card.list_state === \"DONE\" ? \"Arquivar\" : card.list_state === \"FRIDGE\" ? \"Desarquivar\" : action.title;\r\n              \r\n              card = { action, ...card };\r\n\r\n\r\n              return (<Card data={ card } key={ index } />);\r\n          }\r\n        )\r\n        }\r\n      </ul>\r\n    </ListStyle.Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport BoardStyle from './styles';\r\nimport List from '../List'\r\nimport BoardContext from '../../context'\r\n\r\nexport default function Board({ tsuser }) {\r\n  const [lists, setLists] = useState([]);\r\n\r\n  async function loading(){\r\n    let response;\r\n    try{\r\n      response = await api.get('/index');\r\n      const cards = response.data;\r\n      const newCards = [\r\n        { title: 'TODO', cards: cards.filter( card => card.list_state === 'TODO') },\r\n        { title: 'DOING', cards: cards.filter( card => card.list_state === 'DOING') },\r\n        { title: 'DONE', cards: cards.filter( card => card.list_state === 'DONE') },\r\n        { title: 'FRIDGE', cards: cards.filter( card => card.list_state === 'FRIDGE') }\r\n      ];\r\n  \r\n      setLists(newCards);\r\n    }catch{\r\n      //setData(\"request\", \"wrong\");\r\n    }\r\n  }\r\n\r\n  useEffect(function(){\r\n    loading();\r\n  }, []);\r\n\r\n  async function move(cardId, newState, newData = {}) {\r\n    //   alert(`${cardId}, ${newState}, ${newData}`); return;\r\n    let response, card;\r\n    switch( newState.toString().toLowerCase() ) {\r\n      case 'delete':\r\n        response = await api.post(`/${cardId}/archive`);\r\n        card = response.data;\r\n        break;\r\n      case 'post':\r\n          response = await api.post(`/index`, newData);\r\n          card = response.data;\r\n        break;\r\n      case 'next':\r\n        response = await api.post(`/${cardId}/move`);\r\n        console.log(response);\r\n        card = response.data;\r\n        break;\r\n      case 'back':\r\n        response = await api.put(`/${cardId}/move`);\r\n        card = response.data;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    loading();\r\n    return card;\r\n  }\r\n  \r\n  return (\r\n    <BoardContext.Provider value={{ lists, move }}>\r\n      <BoardStyle.Container>\r\n          { lists.map((list, index) => \r\n            {\r\n              return (<List data={list} key={index} />);\r\n            }\r\n          )\r\n          }\r\n      </BoardStyle.Container>\r\n    </BoardContext.Provider>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n    display: block;\r\n    position: absolute;\r\n    width: 400px;\r\n    height: 340px;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: #7159c1;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n\r\n    margin auto;\r\n\r\n    fieldset {\r\n        width: 100%;\r\n        border: 0;\r\n    }\r\n\r\n    fieldset input,\r\n    fieldset textarea,\r\n    fieldset select\r\n     {\r\n        width: 100%;\r\n        margin-bottom: 15px;\r\n        resize: none;\r\n        line-height: 15px;\r\n        font-size: 15px;\r\n        padding: 5px;\r\n        border-radius: 3px;\r\n        border: 1px solid #ccc;\r\n    }\r\n\r\n    fieldset label {\r\n        color: white;\r\n        font-weight: bold;\r\n    }\r\n\r\n    button {\r\n        padding: 2px 5px;\r\n        border: 1px solid white;\r\n        color: white;\r\n        background-color: transparent;\r\n    }\r\n`;\r\n\r\nexport const SelectColor = styled.select`\r\n    background-color: ${props => props.value};\r\n`\r\n\r\nexport const Message = styled.legend`\r\n    border: 1px solid;\r\n    padding: 5px 10px;\r\n    margin-bottom: 8px;\r\n    font-weight: bold;\r\n    display: none;\r\n\r\n    ${props => props.type === \"wait\" && css`\r\n        display: block;\r\n        background-color: #e6e684;\r\n        border-color: #adad06;\r\n        color: black;\r\n    `}\r\n\r\n    ${props => props.type === \"success\" && css`\r\n        display: block;\r\n        background-color: #84e6ae;\r\n        border-color: #06ad3b;\r\n        color: black;\r\n    `}\r\n\r\n    ${props => props.type === \"error\" && css`\r\n        display: block;\r\n        background-color: #f16969;\r\n        border-color: #ad0606;\r\n        color: black;\r\n    `}\r\n\r\n`;\r\n\r\n\r\nconst RegisterStyle = {\r\n    Form,\r\n    SelectColor,\r\n    Message\r\n};\r\n\r\nexport default RegisterStyle;","import React, { useState, useEffect } from 'react';\r\n\r\nimport RegisterStyle from './style'\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Register({ tsuser }) {\r\n    const [info, setInformation] = React.useState({\r\n        title: '',\r\n        content: '',\r\n        label: '',\r\n        created_by: ''\r\n    });\r\n\r\n    const [proccess, setProccess] = React.useState('');\r\n\r\n    const labels = ['#7159c1', '#54e1f7', '#3c8dbc'];\r\n    const message = {\r\n        wait: { type: 'wait', message: 'Aguarde enquanto os dados s√£o processados..' },\r\n        error: { type: 'error', message: 'Os dadosn√£o foram processados :(' },\r\n        success: { type: 'success', message: 'Os dados foram processados :D' },\r\n    };\r\n\r\n    const setInfo = (event) => {\r\n        const {name, value} = event.target;\r\n        const newInfo = { ...info };\r\n        newInfo[name] = value;\r\n        setInformation(newInfo);\r\n    };\r\n\r\n    const handlerSend = (ev) => {\r\n        ev.preventDefault();\r\n        if(info.title === '' || info.content === '' || info.label === '' || info.created_by == '') {\r\n            return false;\r\n        }\r\n        setProccess('wait');\r\n\r\n        async function post(data) {\r\n            try {\r\n                const request = await api.post('/index', data);\r\n                const card = request.data;\r\n                setProccess(\"success\");\r\n            } catch (error) {\r\n                setProccess('error');\r\n            }finally{\r\n                setTimeout(() => setProccess(''), 1000);\r\n                window.location = \"\";\r\n\r\n            }\r\n        }\r\n        post(info);\r\n\r\n        console.log(info);\r\n    };\r\n  \r\n    return (<React.Fragment>\r\n        <RegisterStyle.Form>\r\n            <fieldset>\r\n                <label>Nome da Solicita√ß√£o</label>\r\n                <input type=\"text\" value={info.title} name=\"title\" onChange={setInfo} />\r\n            </fieldset>\r\n            <fieldset>\r\n                <label>Descri√ß√£o da solicita√ß√£o</label>\r\n                <textarea value={info.content} name=\"content\"\r\n                    onChange={setInfo} maxLength=\"255\"\r\n                    rows=\"3\"\r\n                    ></textarea>\r\n            </fieldset>\r\n            <fieldset>\r\n                <label>Label</label>\r\n                <RegisterStyle.SelectColor value={info.label} name=\"label\" onChange={setInfo}>\r\n                    <option value=\"\">Selecione uma cor</option>\r\n                    {labels.map( label =>\r\n                        <option value={label} key={label}>{label}</option>\r\n                    )}\r\n                </RegisterStyle.SelectColor>\r\n            </fieldset>\r\n            <fieldset>\r\n                <label>Solicitante</label>\r\n                <input type=\"text\" value={info.created_by} name=\"created_by\" onChange={setInfo} />\r\n            </fieldset>\r\n            <button onClick={ handlerSend }>Registrar</button>\r\n        </RegisterStyle.Form>\r\n    </React.Fragment>)\r\n};","import React from 'react';\r\n\r\nimport GlobalStyle from './page/styles/global';\r\nimport Header from './page/Header'\r\nimport Board from './page/Board';\r\nimport Register from './page/Register';\r\n\r\n\r\nfunction Application() {\r\n  const [screen, setScreen] = React.useState(false);\r\n  const changeScreen = () => setScreen( !screen );\r\n  return (\r\n    <React.Fragment>\r\n      <Header toggle={{screen, changeScreen}} />\r\n\r\n      { screen &&  <Board tsuser={+new Date()} /> }\r\n      { !screen && <Register /> }\r\n      \r\n      <GlobalStyle />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Application;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// import App from './App';\r\nimport Application from './Application';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\nReactDOM.render(<Application />, document.getElementById('root'));\r\n"],"sourceRoot":""}